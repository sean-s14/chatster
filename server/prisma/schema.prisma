// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  googleId  String?  @unique
  name      String?
  username  String   @unique
  email     String   @unique
  password  String?
  image     String?
  role      UserRole @default(BASIC)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Friends
  friends   User[]   @relation("UserFriends")
  friendOf  User[]   @relation("UserFriends")

  // Friend Requests
  sentFriendRequests     FriendRequest[] @relation("SentFriendRequests")
  receivedFriendRequests FriendRequest[] @relation("ReceivedFriendRequests")
}

enum UserRole {
  BASIC
  ADMIN
  SUPERUSER
}

model FriendRequest {
  id        Int      @id @default(autoincrement())
  senderId  Int
  receiverId Int
  status    FriendRequestStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender    User     @relation("SentFriendRequests", fields: [senderId], references: [id])
  receiver  User     @relation("ReceivedFriendRequests", fields: [receiverId], references: [id])
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}